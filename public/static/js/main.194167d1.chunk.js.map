{"version":3,"sources":["config/Firebase.js","Components/CategoryComponent.js","Components/SingleCategoryComponent.js","App.js","serviceWorker.js","index.js"],"names":["Fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","CategoryComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","categoryListing","bind","assertThisInitialized","e","category","handleDisplayList","_this2","react_default","a","createElement","Fragment","className","onClick","cat","name","Component","SingleCategoryComponent","state","candidats","lastChanged","app","Firebase","database","ref","child","catagoriesRef","limitToLast","handleHome","orderByChild","equalTo","once","data","forEach","childSnapshot","key","val","push","img","votes","link","id","setState","stateReorder","goHome","sort","b","reverse","lastChange","on","map","candidat","i","lastchanged","off","arguments","length","undefined","console","log","classDiv","src","width","height","alt","href","target","rel","_this3","listCandidats","App","displayCategory","isList","currentCategory","listCategories","categories","Components_CategoryComponent","cats","err","error","Components_SingleCategoryComponent","handleGoHome","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.194167d1.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\n\r\n// Initialize Firebase\r\nconst DB_CONFIG = {\r\n    apiKey: \"AIzaSyDx1nW83id3S5qeTHTf4AZUvttj1TnOalU\",\r\n    authDomain: \"mwafront.firebaseapp.com\",\r\n    databaseURL: \"https://mwafront.firebaseio.com\",\r\n    projectId: \"mwafront\",\r\n    storageBucket: \"mwafront.appspot.com\",\r\n    messagingSenderId: \"150686074611\"\r\n};\r\n\r\nconst Fire = firebase.initializeApp(DB_CONFIG);\r\n\r\nexport default Fire;\r\n","import React, {Component} from 'react';\r\n\r\n\r\nclass CategoryComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.categoryListing = this.categoryListing.bind(this);\r\n    }\r\n\r\n\r\n    categoryListing(e, category) {\r\n        this.props.handleDisplayList(category)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"col-3\" onClick={ e => this.categoryListing(e, this.props.cat.name) }><span>{this.props.cat.name}</span></div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CategoryComponent;\r\n","import React, {Component} from 'react';\r\nimport Firebase from '../config/Firebase'\r\n\r\n\r\nclass SingleCategoryComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            category: '',\r\n            candidats: [],\r\n            lastChanged: ''\r\n        };\r\n\r\n        this.app = Firebase;\r\n        this.database = this.app.database().ref().child('candidats');\r\n\r\n        this.catagoriesRef = this.database.limitToLast(100);\r\n\r\n        this.handleHome = this.handleHome.bind(this);\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n\r\n\r\n\r\n        let candidats = [];\r\n\r\n        const query = this.catagoriesRef.orderByChild('category').equalTo(this.props.cat).once('value', function (data) {\r\n            data.forEach(function (childSnapshot) {\r\n                var childKey = childSnapshot.key;\r\n                var data = childSnapshot.val();\r\n\r\n                candidats.push({\r\n                    img: data.img,\r\n                    category: data.category,\r\n                    votes: data.votes,\r\n                    link: data.link,\r\n                    name: data.name,\r\n                    id: childSnapshot.key\r\n                });\r\n\r\n                    this.setState({\r\n                        candidats : candidats\r\n                    });\r\n\r\n                    this.stateReorder();\r\n\r\n            }.bind(this));\r\n        }.bind(this));\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    handleHome(e, category) {\r\n        this.props.goHome(true)\r\n    }\r\n\r\n\r\n    stateReorder(){\r\n        let candidats = this.state.candidats;\r\n        candidats.sort(function(a, b){return a.votes - b.votes}).reverse();\r\n\r\n        this.setState({\r\n            candidats : candidats\r\n        })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            category: this.props.cat,\r\n        });\r\n\r\n        this.lastChange = this.catagoriesRef.orderByChild(\"category\").equalTo(this.props.cat).on(\"child_changed\", function(data) {\r\n\r\n            let candidats = this.state.candidats;\r\n            candidats.map( (candidat, i ) => {\r\n\r\n                if( data.key == candidat.id){\r\n                    // console.log(\"fouuund\", candidat.id, data.key)\r\n                    // console.log(i)\r\n                    candidats[i] = {\r\n                        img: data.val().img,\r\n                        category: data.val().category,\r\n                        votes: data.val().votes,\r\n                        link: data.val().link,\r\n                        name: data.val().name,\r\n                        id: data.key\r\n                    };\r\n\r\n                    this.lastchanged(data.key)\r\n                }\r\n                return candidat;\r\n\r\n            })\r\n            // console.log(candidats)\r\n            this.setState({\r\n                candidats : candidats\r\n            });\r\n\r\n            this.stateReorder();\r\n\r\n        }.bind(this));\r\n\r\n        this.catagoriesRef.off(\"child_changed\", this.lastChange)\r\n\r\n    }\r\n\r\n    lastchanged(id = 0){\r\n        this.state.lastChanged = id;\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        this.setState({\r\n            category: '',\r\n            candidats: []\r\n        });\r\n\r\n        this.catagoriesRef.off(\"child_changed\", this.lastChange)\r\n        this.app.database().ref().child('candidats').off(\"child_changed\", this.lastChange)\r\n\r\n        console.log(\"unmw\")\r\n    }\r\n\r\n\r\n    listCandidats(){\r\n\r\n        let candidats = [];\r\n\r\n        for( let i in this.state.candidats ){\r\n            // console.log(this.state.candidats[i])\r\n            let classDiv;\r\n            if(this.state.lastChanged == this.state.candidats[i].id){ classDiv = 'latest' }else{ classDiv = '' }\r\n            candidats.push(<div className={classDiv +\" media text-muted pt-3\"} id={this.state.candidats[i].id} key={this.state.candidats[i].id}>\r\n                <img src={this.state.candidats[i].img} width=\"32px\" height=\"32px\" alt={this.state.candidats[i].name} className=\"mr-2 rounded\" />\r\n                <div className=\"media-body pb-3 mb-0 small lh-125 border-bottom border-gray\">\r\n                    <div className=\"d-flex justify-content-between align-items-center w-100\">\r\n                        <strong className=\"text-gray-dark\">{this.state.candidats[i].name} </strong>\r\n                        <a href={this.state.candidats[i].link} target=\"_blank\" rel=\"noopener noreferrer\">View</a>\r\n                    </div>\r\n                    <span className=\"d-block\">{this.state.candidats[i].votes}</span>\r\n                </div>\r\n            </div>)\r\n        }\r\n\r\n        return candidats;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-12\">\r\n                <a className=\"nav-link active\" href=\"#\" onClick={e => this.handleHome(e, true)}>Home</a>\r\n                <h1 className=\"text-center\">{this.props.cat}</h1>\r\n                {this.listCandidats()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SingleCategoryComponent;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Firebase from './config/Firebase'\nimport Category from './Components/CategoryComponent';\nimport SingleCategory from './Components/SingleCategoryComponent';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            categories : [],\n            isList: false,\n            currentCategory: '',\n        };\n\n        this.app = Firebase;\n        this.database = this.app.database().ref().child('categories');\n\n        this.displayCategory= this.displayCategory.bind(this);\n    }\n\n\n    componentWillMount() {\n\n        let cats = [];\n\n        this.catagoriesRef = this.database.limitToLast(100);\n        this.catagoriesRef.on('child_added', (data) => {\n\n            cats.push({\n                link: data.val().link,\n                name: data.val().name,\n                id: data.key\n            });\n            this.setState({\n                categories : cats,\n            });\n\n        }, function (err) {\n            console.error(err)\n        });\n    }\n\n    displayCategory = (category) => {\n        console.log(\"disp cat\" + category)\n        this.setState({\n            isList: true,\n            currentCategory: category,\n        })\n    };\n\n    handleGoHome(e){\n        this.setState({\n            isList: false,\n\n        })\n    }\n\n\n    listCategories = () => {\n\n        let listCategories = [];\n        for( let category in this.state.categories ) {\n            listCategories.push(<Category cat={this.state.categories[category]} handleDisplayList={e => this.displayCategory(e)}  key={category}  />);\n        }\n        return listCategories;\n    };\n\n\n    render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n            <div className=\"row\">\n                { this.state.isList ? <SingleCategory cat={this.state.currentCategory} goHome={e => this.handleGoHome(e)}/> : this.listCategories() }\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}